name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: 'False'
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: localhost
      DB_PORT: 5432
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Install system dependencies for pycairo
        run: |
          sudo apt-get update
          sudo apt-get install -y libcairo2-dev pkg-config python3-dev

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.12'

      - name: Install Python dependencies
        run: pip install --upgrade pip setuptools wheel && pip install -r requirements.txt

      - name: Run tests
        run: python manage.py test

      - name: Run lint
        run: |
          pip install flake8
          flake8 .

  build-docker:
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker images
        run: docker compose build --pull

  deploy:
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check SSH port availability
        run: nc -vz ${{ secrets.SERVER_HOST }} 22

      - name: Save SSH private key
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > ${{ runner.temp }}/id_rsa
          chmod 600 ${{ runner.temp }}/id_rsa

      - name: Test SSH connection (verbose)
        run: ssh -vvv -o StrictHostKeyChecking=no -i ${{ runner.temp }}/id_rsa -p 22 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} exit

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.SERVER_USER }}/Habit-Tracker
            docker compose pull
            docker compose up -d --build
